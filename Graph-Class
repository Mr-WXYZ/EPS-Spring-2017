

import java.awt.BasicStroke;
import java.awt.Color;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

import javax.swing.JFrame;
import javax.swing.JPanel;

import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

public class Graph extends JPanel
{
	final XYSeries totalSeries = new XYSeries("Total");
    final XYSeries nrgSeries = new XYSeries("Energy");
    final XYSeries oilSeries = new XYSeries("Oil");
    final XYSeries alarmSeries = new XYSeries("Alarm");
    
	XYSeriesCollection dataset = new XYSeriesCollection();
	
	JFreeChart chart = ChartFactory.createXYLineChart("Graph", "Time (Seconds)", "Percentage (%)", dataset, PlotOrientation.VERTICAL, true, true, false);
	
	 Thread thread = new Thread()
	    {
		 @Override public void run()
	    	{
			//x is the value for time
	    	// yt = the value for the total, ya = for alarm, yn = for energy, yo = for oil
			 double x = 0,yt = 0,ya = 0, yn = 0, yo=0;
 			
 			dataset.addSeries(totalSeries);
 		    dataset.addSeries(nrgSeries);
 		    dataset.addSeries(oilSeries);
 		    dataset.addSeries(alarmSeries);
 			
 			//While x is different from 600s (10mins)
	    		while (x != 600)
	    		{
	    			ExcelSearch Excelsearch = new ExcelSearch();
	    			Excelsearch.Information();
					ya = Excelsearch.c = (int) Excelsearch.infoRow.getCell (0).getNumericCellValue();
					yo = Excelsearch.c = (int) Excelsearch.infoRow.getCell (1).getNumericCellValue();
					yn = Excelsearch.c = (int) Excelsearch.infoRow.getCell (2).getNumericCellValue();
					yt = Excelsearch.c = (int) Excelsearch.infoRow.getCell (3).getNumericCellValue();
	    			//Adding our x and y values to the serie
		    		oilSeries.add(x, yo);
		    		//For Energy
		    		nrgSeries.add(x, yn);
		    		//For Alarm
		    		alarmSeries.add(x, ya);   			
	    			//For the line Total
		    		totalSeries.add(x++, yt);    		
		    		//At the end we add 1 to x and we wait one second. That way x act like a timer.
		    	
		    		 try {
		    		        Thread.sleep(1000);
		    		    } catch (InterruptedException e) {
		    		        return;
		    		    }
	    		}
	    	}
	    };
	    //End of the thread
	    
	    public void running(JPanel panel)
	    {
	    	ChartPanel pan = new ChartPanel(chart);
		    panel.add(pan);
		    panel.setVisible(true);
		    
		    //Background color
		    XYPlot plot = (XYPlot) chart.getPlot();
		    
		    Color colr = new Color(255, 255, 204);
		    chart.setBackgroundPaint(colr);
	    }
	    
	    public void start()
	    {
	    	thread.start();
	    }
	    
	    public void setLineColor(int a, Color color)
	    {
	    	XYPlot plot = (XYPlot) chart.getPlot();
	    	plot.getRenderer().setSeriesPaint(a, color);
	    }
	    
	    public void setLineStroke(int a)
	    {
	    	int i;
		    for(i=0; i<=3; i++)
		    {
		    	XYPlot plot = (XYPlot) chart.getPlot();
		    	plot.getRenderer().setSeriesStroke(i, new BasicStroke(a));
		    }
	    }
}

